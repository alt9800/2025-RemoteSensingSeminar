name: Deploy Seminar Materials
on:
  push:
    branches: [ main ]
    paths:
      - '*/slide.md'
      - '*/handson/**'
      - '*/assets/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Marp CLI
        run: npm install -g @marp-team/marp-cli

      - name: Detect changed directories
        id: changes
        run: |
          # 変更されたファイルから日付ディレクトリを抽出
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # 手動実行の場合は全ての日付ディレクトリを処理
            CHANGED_DATES=$(find . -maxdepth 1 -type d -name '[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]' | sed 's|./||' | sort)
          else
            # プッシュの場合は変更されたディレクトリのみ
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
            CHANGED_DATES=$(echo "$CHANGED_FILES" | grep -E '^[0-9]{4}-[0-9]{2}-[0-9]{2}/' | cut -d'/' -f1 | sort -u)
          fi
          
          echo "Changed directories: $CHANGED_DATES"
          
          if [ -n "$CHANGED_DATES" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "changed_dates<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGED_DATES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Create docs directories
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          mkdir -p docs/slides
          mkdir -p docs/handson

      - name: Generate materials
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          echo "${{ steps.changes.outputs.changed_dates }}" | while read DATE_DIR; do
            if [ -n "$DATE_DIR" ] && [ -d "$DATE_DIR" ]; then
              echo "Processing $DATE_DIR..."
              
              # スライド生成 (slide.mdが存在する場合のみ)
              if [ -f "$DATE_DIR/slide.md" ]; then
                echo "Generating slides for $DATE_DIR"
                
                # HTML生成
                marp "$DATE_DIR/slide.md" \
                  --html \
                  --allow-local-files \
                  --output "docs/slides/$DATE_DIR.html"
                
                # PDF生成
                marp "$DATE_DIR/slide.md" \
                  --pdf \
                  --allow-local-files \
                  --output "docs/slides/$DATE_DIR.pdf"
                
                echo "✅ Generated slides for $DATE_DIR"
              else
                echo "⚠️ slide.md not found in $DATE_DIR"
              fi
              
              # ハンズオン資料のコピー (handsonディレクトリが存在する場合のみ)
              if [ -d "$DATE_DIR/handson" ]; then
                echo "Copying handson materials for $DATE_DIR"
                
                # handsonディレクトリをそのままコピー
                cp -r "$DATE_DIR/handson" "docs/handson/$DATE_DIR"
                
                echo "✅ Copied handson materials for $DATE_DIR"
              else
                echo "ℹ️ handson directory not found in $DATE_DIR"
              fi
            fi
          done

      - name: Generate site index
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          cat > docs/index.html << 'EOF'
<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>📚 セミナー資料</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.2.0/github-markdown-light.min.css">
    <style>
        body { 
            max-width: 980px; 
            margin: 0 auto; 
            padding: 45px; 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Noto Sans', Helvetica, Arial, sans-serif;
        }
        .header {
            text-align: center;
            margin-bottom: 40px;
            padding-bottom: 20px;
            border-bottom: 2px solid #e1e4e8;
        }
        .session { 
            margin: 30px 0; 
            padding: 25px; 
            border: 1px solid #e1e4e8; 
            border-radius: 8px;
            background: #f8f9fa;
            transition: transform 0.2s, box-shadow 0.2s;
        }
        .session:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        .updated { 
            border-left: 4px solid #28a745; 
            background: linear-gradient(to right, #f1f8ff, #f8f9fa);
        }
        .session h2 {
            margin-top: 0;
            color: #24292e;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .links { 
            display: flex; 
            gap: 15px; 
            margin-top: 15px; 
            flex-wrap: wrap; 
        }
        .links a { 
            padding: 10px 20px; 
            background: #0366d6; 
            color: white; 
            text-decoration: none; 
            border-radius: 6px; 
            font-size: 14px;
            font-weight: 500;
            transition: background-color 0.2s;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        .links a:hover { 
            background: #0256cc; 
        }
        .links a.handson {
            background: #28a745;
        }
        .links a.handson:hover {
            background: #1e7e34;
        }
        .status { 
            font-size: 12px; 
            color: #6a737d; 
            margin-top: 10px;
            padding: 5px 10px;
            background: #e1f5fe;
            border-radius: 4px;
            display: inline-block;
        }
        .update-time {
            text-align: center;
            color: #6a737d;
            font-size: 14px;
            margin-bottom: 30px;
        }
    </style>
</head>
<body class="markdown-body">
    <div class="header">
        <h1>📚 セミナー資料</h1>
        <div class="update-time">最終更新: EOF
          date '+%Y年%m月%d日 %H:%M (JST)' >> docs/index.html
          cat >> docs/index.html << 'EOF'
</div>
    </div>
EOF
          
          # 全ての日付ディレクトリをスキャンして一覧作成（新しい順）
          find . -maxdepth 1 -type d -name '[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]' | sort -r | while read dir; do
            DATE_DIR=$(basename "$dir")
            
            # 今回更新されたかチェック
            IS_UPDATED=""
            if echo "${{ steps.changes.outputs.changed_dates }}" | grep -q "$DATE_DIR"; then
              IS_UPDATED="updated"
            fi
            
            echo "    <div class=\"session $IS_UPDATED\">" >> docs/index.html
            echo "        <h2>📅 $DATE_DIR $([ -n "$IS_UPDATED" ] && echo '🆕')</h2>" >> docs/index.html
            echo "        <div class=\"links\">" >> docs/index.html
            
            # スライドリンク（ファイルが存在する場合のみ）
            if [ -f "docs/slides/$DATE_DIR.html" ]; then
              echo "            <a href=\"slides/$DATE_DIR.html\">📊 スライド (HTML)</a>" >> docs/index.html
            fi
            if [ -f "docs/slides/$DATE_DIR.pdf" ]; then
              echo "            <a href=\"slides/$DATE_DIR.pdf\">📄 スライド (PDF)</a>" >> docs/index.html
            fi
            
            # ハンズオンリンク（ディレクトリが存在する場合のみ）
            if [ -d "docs/handson/$DATE_DIR" ]; then
              echo "            <a href=\"handson/$DATE_DIR/\" class=\"handson\">💻 ハンズオン</a>" >> docs/index.html
            fi
            
            echo "        </div>" >> docs/index.html
            
            # 更新ステータス表示
            if [ -n "$IS_UPDATED" ]; then
              echo "        <div class=\"status\">✨ 今回更新されました</div>" >> docs/index.html
            fi
            
            echo "    </div>" >> docs/index.html
          done
          
          cat >> docs/index.html << 'EOF'
    
    <div style="text-align: center; margin-top: 50px; padding-top: 30px; border-top: 1px solid #e1e4e8; color: #6a737d;">
        <p>🤖 このページは GitHub Actions により自動生成されています</p>
    </div>
</body>
</html>
EOF

      - name: Deploy to GitHub Pages
        if: steps.changes.outputs.has_changes == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs
          keep_files: true

      - name: Summary
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          echo "## 🎉 デプロイ完了!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "以下の資料が更新されました:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "${{ steps.changes.outputs.changed_dates }}" | while read DATE_DIR; do
            if [ -n "$DATE_DIR" ]; then
              echo "### 📅 $DATE_DIR" >> $GITHUB_STEP_SUMMARY
              
              if [ -f "docs/slides/$DATE_DIR.html" ]; then
                echo "- ✅ スライド (HTML) 生成完了" >> $GITHUB_STEP_SUMMARY
              fi
              if [ -f "docs/slides/$DATE_DIR.pdf" ]; then
                echo "- ✅ スライド (PDF) 生成完了" >> $GITHUB_STEP_SUMMARY
              fi
              if [ -d "docs/handson/$DATE_DIR" ]; then
                echo "- ✅ ハンズオン資料 コピー完了" >> $GITHUB_STEP_SUMMARY
              fi
              
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "🔗 **GitHub Pages URL:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY

      - name: Display no changes message
        if: steps.changes.outputs.has_changes == 'false'
        run: |
          echo "## ℹ️ 変更なし" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "セミナー資料に関連する変更は検出されませんでした。" >> $GITHUB_STEP_SUMMARY